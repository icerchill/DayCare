/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.neu.csye6200;

import com.sun.org.apache.xml.internal.resolver.Resolver;
import java.awt.Desktop;
import java.awt.GridLayout;
import java.io.File;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Set;
import java.util.Vector;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.TableColumn;


/**
 *
 * @author icer
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        todayDate.setText(LocalDate.now().format(DateTimeFormatter.ISO_DATE));
    }
    
    //controller instance 
    Controller conInstant=new Controller();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOptionPane1 = new javax.swing.JOptionPane();
        inputName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        managmentTab = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        teacherTable = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        importStudentBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        importTeacherBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        importRuleBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        searchInput = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        update = new javax.swing.JButton();
        saveStudent = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        studentCountLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        teacherCountLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        todayDate = new javax.swing.JLabel();
        immunizationTab = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        immTable = new javax.swing.JTable();
        nameEnquiry1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        immSearch = new javax.swing.JButton();
        ImportImmRules = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        scheduleTab = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        scheduleText = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        showAll = new javax.swing.JButton();
        saveSchedule = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        CourseBox1 = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        GroupBox = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        scheduleTable = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        managmentText = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();

        inputName.setText("jTextField1");

        jLabel9.setText("jLabel9");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFont(new java.awt.Font("(", 0, 24)); // NOI18N

        jTabbedPane3.setBackground(new java.awt.Color(255, 204, 204));
        jTabbedPane3.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N

        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(studentTable);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 673, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Student", jPanel4);

        teacherTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(teacherTable);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 673, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Teacher", jPanel5);

        importStudentBtn.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        importStudentBtn.setText("Import Student CSV");
        importStudentBtn.setSize(new java.awt.Dimension(97, 35));
        importStudentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importStudentBtnActionPerformed(evt);
            }
        });

        addBtn.setBackground(new java.awt.Color(153, 255, 153));
        addBtn.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        addBtn.setText("Add Student");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        importTeacherBtn.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        importTeacherBtn.setText("Import Teacher CSV");
        importTeacherBtn.setSize(new java.awt.Dimension(97, 35));
        importTeacherBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importTeacherBtnActionPerformed(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(255, 102, 102));
        deleteBtn.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        deleteBtn.setText("Delete Student");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        importRuleBtn.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        importRuleBtn.setText("Import State Regulation Rules ");
        importRuleBtn.setSize(new java.awt.Dimension(97, 41));
        importRuleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importRuleBtnActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(102, 255, 255));
        jButton1.setText("Show Upcoming & Pasted due");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        update.setBackground(new java.awt.Color(255, 255, 102));
        update.setText("Update Student Registration Time");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        saveStudent.setText("Save");
        saveStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveStudentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(searchInput, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(importRuleBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(importTeacherBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(importStudentBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(update, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveStudent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(importStudentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(importTeacherBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(importRuleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47))
        );

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setText("Number of Student Enroll:");

        studentCountLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        studentCountLabel.setText("0");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel2.setText("Number of Teacher Hired:");

        teacherCountLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        teacherCountLabel.setText("0");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel3.setText("Today's Date: ");

        todayDate.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        todayDate.setText("jLabel5");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(todayDate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(teacherCountLabel))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(studentCountLabel)))
                .addGap(0, 23, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(todayDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(studentCountLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(teacherCountLabel))
                .addContainerGap())
        );

        javax.swing.GroupLayout managmentTabLayout = new javax.swing.GroupLayout(managmentTab);
        managmentTab.setLayout(managmentTabLayout);
        managmentTabLayout.setHorizontalGroup(
            managmentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managmentTabLayout.createSequentialGroup()
                .addGroup(managmentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(managmentTabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(managmentTabLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        managmentTabLayout.setVerticalGroup(
            managmentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, managmentTabLayout.createSequentialGroup()
                .addGroup(managmentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(managmentTabLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(managmentTabLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)))
                .addGap(94, 94, 94))
        );

        jTabbedPane3.addTab("Managment", managmentTab);

        jScrollPane5.setViewportView(immTable);
        if (immTable.getColumnModel().getColumnCount() > 0) {
            immTable.getColumnModel().getColumn(0).setMaxWidth(50);
            immTable.getColumnModel().getColumn(0).setHeaderValue("ID");
        }

        nameEnquiry1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        nameEnquiry1.setToolTipText("");
        nameEnquiry1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameEnquiry1ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel7.setText("Student Name:");

        immSearch.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        immSearch.setText("Search");
        immSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                immSearchActionPerformed(evt);
            }
        });

        ImportImmRules.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        ImportImmRules.setText("Import Immunization Rules");
        ImportImmRules.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportImmRulesActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout immunizationTabLayout = new javax.swing.GroupLayout(immunizationTab);
        immunizationTab.setLayout(immunizationTabLayout);
        immunizationTabLayout.setHorizontalGroup(
            immunizationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(immunizationTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(immunizationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(immunizationTabLayout.createSequentialGroup()
                        .addComponent(ImportImmRules)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addGap(12, 12, 12)
                        .addComponent(nameEnquiry1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(immSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addGap(0, 179, Short.MAX_VALUE)))
                .addContainerGap())
        );
        immunizationTabLayout.setVerticalGroup(
            immunizationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(immunizationTabLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(immunizationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ImportImmRules, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(nameEnquiry1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(immSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );

        jTabbedPane3.addTab("Immunization", immunizationTab);

        scheduleText.setColumns(20);
        scheduleText.setRows(5);
        jScrollPane4.setViewportView(scheduleText);

        showAll.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        showAll.setText("Show All Schedule");
        showAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllActionPerformed(evt);
            }
        });

        saveSchedule.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        saveSchedule.setText("Save Schedule");
        saveSchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveScheduleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(showAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showAll, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel10.setText("Select Course ");

        CourseBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CourseBox1ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel8.setText("Select Group");

        GroupBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GroupBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(CourseBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(GroupBox, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(CourseBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(GroupBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        scheduleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(scheduleTable);

        javax.swing.GroupLayout scheduleTabLayout = new javax.swing.GroupLayout(scheduleTab);
        scheduleTab.setLayout(scheduleTabLayout);
        scheduleTabLayout.setHorizontalGroup(
            scheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scheduleTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(scheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        scheduleTabLayout.setVerticalGroup(
            scheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, scheduleTabLayout.createSequentialGroup()
                .addGroup(scheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(scheduleTabLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, scheduleTabLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(scheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane3.addTab("Class Schedule", scheduleTab);

        managmentText.setColumns(20);
        managmentText.setRows(5);
        jScrollPane1.setViewportView(managmentText);

        jLabel4.setText("System Log");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void importStudentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importStudentBtnActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int returnValue = fileChooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
          File selectedFile = fileChooser.getSelectedFile();
          //System.out.println(selectedFile.getAbsolutePath());
            try {
                conInstant.importStudent(selectedFile.getAbsolutePath());
                managmentText.append("*** " + selectedFile.getAbsolutePath() + " was imported...\n");
            } catch (Exception e) {
                e.printStackTrace();
                managmentText.append("Wrong Format\n");
            }                
        }
        updateStudentTable();
        updateStudentCountLabel();
        
    }//GEN-LAST:event_importStudentBtnActionPerformed

    private void importRuleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importRuleBtnActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int returnValue = fileChooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
          File selectedFile = fileChooser.getSelectedFile();
          //System.out.println(selectedFile.getAbsolutePath());
          managmentText.append("*** " + selectedFile.getAbsolutePath() + " was imported...\n"); 
          conInstant.importCourseRules(selectedFile.getAbsolutePath());
          managmentText.append(conInstant.getClassRules());
          //applying rules
            if (conInstant.dataCheck()) {
                conInstant.courseRulesApplyer();
                managmentText.append("Rules Applied\n");
            }
            else
                managmentText.append("Add Studens and Teachers first\n");
        }
        
    }//GEN-LAST:event_importRuleBtnActionPerformed

    private void nameEnquiry1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameEnquiry1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameEnquiry1ActionPerformed

    private void showAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllActionPerformed
        CourseBox1.removeAllItems();
        GroupBox.removeAllItems();
        scheduleText.setText("");
        scheduleText.setText(conInstant.getAllCourseInfo());
        String [] coTitle={"Course","Group","Student Name","Teacher"};
        DefaultTableModel myTM=new DefaultTableModel();
        myTM.setColumnCount(coTitle.length);
        myTM.setColumnIdentifiers(coTitle);
        Vector<Course> tmp=conInstant.getCourses();
        for (Course c : tmp) {
            String couresName=c.getCouresName();
            CourseBox1.addItem(couresName);
            for (Group g: c.getCourseGroup()) {
                String gName=g.getGroupID();
                String teacher=g.getTeacher().getName();
                for (Student s : g.getStudentGroup()) {
                    myTM.addRow(new Object[] {couresName,gName,s.getName(),teacher});
                }
            }
            myTM.addRow(new Object[]{"","","",""});
        }
        scheduleTable.setModel(myTM);
        scheduleTable.setAutoCreateRowSorter(true);
        
        
    }//GEN-LAST:event_showAllActionPerformed

    private void GroupBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GroupBoxActionPerformed
        String [] coTitle={"Course","Group","Student Name","Teacher"};
        DefaultTableModel myTM=new DefaultTableModel();
        myTM.setColumnCount(coTitle.length);
        myTM.setColumnIdentifiers(coTitle);
        try {
            String selectedCourse=CourseBox1.getSelectedItem().toString();
            String selectedGroup=GroupBox.getSelectedItem().toString();
            Group tmp=conInstant.groupFinder(conInstant.courseFinder(selectedCourse), selectedGroup);
            String teacher=tmp.getTeacher().getName();
            for (Student student : tmp.getStudentGroup()) {
                 myTM.addRow(new Object[] {selectedCourse,selectedGroup,student.getName(),teacher});
            }
            scheduleTable.setModel(myTM);
            scheduleTable.setAutoCreateRowSorter(true);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_GroupBoxActionPerformed

    private void immSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_immSearchActionPerformed
        if (conInstant.checkImmrule()) {
            DefaultTableModel immTM=new DefaultTableModel();
            String [] immTitle={"Student Name","Upcomming Immunization Info"};
            immTM.setColumnCount(immTitle.length);
            immTM.setColumnIdentifiers(immTitle);
            try {
                Student s=conInstant.searchStudent(nameEnquiry1.getText());
                immTM.addRow(new Object[] {s.getName(),conInstant.immInfo(s)});
                immTable.setModel(immTM);
                immTable.setAutoCreateRowSorter(true);
            } catch (IndexOutOfBoundsException e) {
                JPanel myPanel = new JPanel();
                myPanel.add(new JLabel("Plese enter a valid name"));
                int result = JOptionPane.showConfirmDialog(null, myPanel,
                "Error", JOptionPane.CLOSED_OPTION);
            }
        }
    }//GEN-LAST:event_immSearchActionPerformed

    private void importTeacherBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importTeacherBtnActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int returnValue = fileChooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
          File selectedFile = fileChooser.getSelectedFile();
          //System.out.println(selectedFile.getAbsolutePath());
            try {
                conInstant.importTeacher(selectedFile.getAbsolutePath());
                managmentText.append("*** " + selectedFile.getAbsolutePath() + " was imported...\n");
            } catch (Exception e) {
                managmentText.append("Wrong Format\n");
            }             
        }
        updateTeacherTable();
        updateTeacherCountLabel();
    }//GEN-LAST:event_importTeacherBtnActionPerformed

    private void CourseBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CourseBox1ActionPerformed
        GroupBox.removeAllItems();
        try {
            String selectedCourse=CourseBox1.getSelectedItem().toString();
            for (Group g: conInstant.courseFinder(selectedCourse).getCourseGroup()) {
            GroupBox.addItem(g.getGroupID());
            }
        } catch (Exception e) {
        } 
    }//GEN-LAST:event_CourseBox1ActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
       addStudent();
    }//GEN-LAST:event_addBtnActionPerformed

    private void ImportImmRulesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportImmRulesActionPerformed
        DefaultTableModel immTM=new DefaultTableModel();
        String [] immTitle={"Student Name","Immunization Info","Expired & Upcomming Immunization"};
        immTM.setColumnCount(immTitle.length);
        immTM.setColumnIdentifiers(immTitle);
        JFileChooser fileChooser = new JFileChooser();
        int returnValue = fileChooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
          File selectedFile = fileChooser.getSelectedFile();
          managmentText.append("*** " + selectedFile.getAbsolutePath() + " was imported...\n"); 
          conInstant.importImmRules(selectedFile.getAbsolutePath());
          //show immunization
            if (conInstant.getStudentCount()!=0) {
                Vector<Student> tmplist=conInstant.getStudentData();
                for (Student s : tmplist) {
                    String immif="";
//                    Set st=s.getImmTime().keySet();
//                    for (Iterator iterator = st.iterator(); iterator.hasNext();) {
//                        immif+=(String)iterator.next()+":"+FileIO.Date2String(s.getImmTime().get((String)iterator.next()));      
//                    }
                    for (String key : s.getImmTime().keySet()) {
                        immif+=key+":"+FileIO.Date2String(s.getImmTime().get(key))+"\t";
                    }
                    immTM.addRow(new Object[] {s.getName(),immif,conInstant.immInfo(s)});
                }
            }
            else
                managmentText.append("Add Student before applying immunization rules");
        }
        immTable.setModel(immTM);
        immTable.setAutoCreateRowSorter(true);
        
        
    }//GEN-LAST:event_ImportImmRulesActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        try {
            Student s=conInstant.searchStudent(searchInput.getText());
            String [] colTitiles = {"ID", "Name", "Age(Month)", "Registation Time","Years Enrolled", "Days to Anniversary"};
            DefaultTableModel myTM = new DefaultTableModel();
            myTM.setColumnCount(colTitiles.length);
            myTM.setColumnIdentifiers(colTitiles);
            myTM.addRow(new Object[] {s.getStudentID(), s.getName(), s.getAge(),
                s.getRegistrationTimeString(),
                LocalDate.now().getYear()-s.getRegistrationTime().getYear(),
                s.getRegistrationTime().getDayOfYear()-LocalDate.now().getDayOfYear()
                });
            studentTable.setModel(myTM);
            studentTable.setAutoCreateRowSorter(true); 
        } catch (IndexOutOfBoundsException e) {
            JPanel myPanel = new JPanel();
                myPanel.add(new JLabel("Plese enter a valid name"));
                int result = JOptionPane.showConfirmDialog(null, myPanel,
                "Error", JOptionPane.CLOSED_OPTION);
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        deleteStudent();
        
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String [] colTitiles = {"ID", "Name", "Age(Month)", "Registation Time","Days to Anniversary"};
        DefaultTableModel myTM = new DefaultTableModel();
        myTM.setColumnCount(colTitiles.length);
        myTM.setColumnIdentifiers(colTitiles);       
       // System.out.println(jTable1.getColumnModel().getColumnCount());
        //myTM.addRow(new Object[] {id, name, age, regDate});
        ArrayList<Student> tmplist=conInstant.showThisMonth();
        for (Student s : tmplist) {
            myTM.addRow(new Object[] {s.getStudentID(), s.getName(), s.getAge(),
                s.getRegistrationTimeString(),                
                s.getRegistrationTime().getDayOfYear()-LocalDate.now().getDayOfYear()});
        }
        studentTable.setModel(myTM);
        studentTable.setAutoCreateRowSorter(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        updateStudentTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        upadateImmTable();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        JPanel myPanel = new JPanel();
        JTextField name = new JTextField(5);
        JTextField time = new JTextField(5);
        myPanel.setLayout(new GridLayout(0,2,2,2));
        myPanel.add(new JLabel("Name:"));
        myPanel.add(name);
        myPanel.add(new JLabel("New Time:"));
        myPanel.add(time);
        int result = JOptionPane.showConfirmDialog(null, myPanel, 
               "Update Student Registration Time", JOptionPane.OK_CANCEL_OPTION);
        if (result == JOptionPane.YES_OPTION) {
            conInstant.regDateUpate(name.getText(), time.getText());            
            updateStudentTable();
            conInstant.courseRulesApplyer();
            managmentText.append(name.getText() + "'s Registration Time Update..");
        }
    }//GEN-LAST:event_updateActionPerformed

    private void saveScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveScheduleActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int returnValue = fileChooser.showSaveDialog(null);
        fileChooser.setApproveButtonText("Save");
        if (returnValue == JFileChooser.APPROVE_OPTION) {
          File selectedFile = fileChooser.getSelectedFile();         
            try {
                conInstant.saveCourse2file(selectedFile.getAbsolutePath());
                managmentText.append("*** " + selectedFile.getAbsolutePath() + " was saved...\n");
            } catch (Exception e) {
                e.printStackTrace();
                managmentText.append("save went wrong\n");
            }                
        }
        
    }//GEN-LAST:event_saveScheduleActionPerformed

    private void saveStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveStudentActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int returnValue = fileChooser.showSaveDialog(null);
        fileChooser.setApproveButtonText("Save");
        if (returnValue == JFileChooser.APPROVE_OPTION) {
          File selectedFile = fileChooser.getSelectedFile();         
            try {
                conInstant.saveStudent2file(selectedFile.getAbsolutePath());
                managmentText.append("*** " + selectedFile.getAbsolutePath() + " was saved...\n");
            } catch (Exception e) {
                e.printStackTrace();
                managmentText.append("save went wrong\n");
            }                
        }
        
    }//GEN-LAST:event_saveStudentActionPerformed
    
    //アップデート　ファンクション
    private void upadateImmTable(){
        DefaultTableModel immTM=new DefaultTableModel();
        String [] immTitle={"Student Name","Immunization Info","Expired & Upcomming Immunization"};
        immTM.setColumnCount(immTitle.length);
        immTM.setColumnIdentifiers(immTitle);
        if (conInstant.getStudentCount()!=0) {
                Vector<Student> tmplist=conInstant.getStudentData();
                for (Student s : tmplist) {
                    String immif="";
                    for (String key : s.getImmTime().keySet()) {
                        immif+=key+":"+FileIO.Date2String(s.getImmTime().get(key))+"\t";
                    }
                    immTM.addRow(new Object[] {s.getName(),immif,conInstant.immInfo(s)});
                }
                immTable.setModel(immTM);
                immTable.setAutoCreateRowSorter(true);
            }
            else
                managmentText.append("Add Student before applying immunization rules\n");
    }
    
    
    private void updateStudentTable() {
        String [] colTitiles = {"ID", "Name", "Age(Month)", "Registation Time", "Days to Anniversary"};
        DefaultTableModel myTM = new DefaultTableModel();
        myTM.setColumnCount(colTitiles.length);
        myTM.setColumnIdentifiers(colTitiles);       
       // System.out.println(jTable1.getColumnModel().getColumnCount());
        //myTM.addRow(new Object[] {id, name, age, regDate});
        Vector<Student> tmplist=conInstant.getStudentData();
        for (Student s : tmplist) {
            myTM.addRow(new Object[] {s.getStudentID(), s.getName(), s.getAge(), 
                s.getRegistrationTimeString(), 
                s.getRegistrationTime().getDayOfYear()-LocalDate.now().getDayOfYear()});
        }
        studentTable.setModel(myTM);
        studentTable.setAutoCreateRowSorter(true); 
    }
    
    private void updateTeacherTable() {
        String [] colTitiles = {"ID", "Name", "Age(Month)", "Credits"};
        DefaultTableModel myTM = new DefaultTableModel();
        myTM.setColumnCount(colTitiles.length);
        myTM.setColumnIdentifiers(colTitiles);       
        Vector<Teacher> tmplist=conInstant.getTeachersData();
        for (Teacher s : tmplist) {
            myTM.addRow(new Object[] {s.getTeacherID(), s.getName(), s.getAge(), s.getCredit()});
        }
        teacherTable.setModel(myTM);
        teacherTable.setAutoCreateRowSorter(true); 
    }
    
    private void updateStudentCountLabel() {
        studentCountLabel.setText(Integer.toString(conInstant.getStudentCount()));   
    }
    private void updateTeacherCountLabel() {
        teacherCountLabel.setText(Integer.toString(conInstant.getTeacherCount()));   
    }
    
    private void deleteStudent() {
        JPanel myPanel = new JPanel();
        JTextField name = new JTextField(5);
        myPanel.setLayout(new GridLayout(0,2,2,2));
        myPanel.add(new JLabel("Name:"));
        myPanel.add(name);
        int result = JOptionPane.showConfirmDialog(null, myPanel, 
               "Delete Student", JOptionPane.OK_CANCEL_OPTION);
        if (result == JOptionPane.YES_OPTION) {
            conInstant.deleteStudent(name.getText());
            updateStudentCountLabel();
            updateStudentTable();
            conInstant.courseRulesApplyer();
            managmentText.append(name.getText() + " deleted..");
        }
    }
    
    private void addStudent() {
      JPanel myPanel = new JPanel();
      JTextField id = new JTextField(5);
      JTextField name = new JTextField(5);
      JTextField pName = new JTextField(5);
      JTextField age = new JTextField(5);
      JTextField gpa = new JTextField(5);
      JTextField regTime = new JTextField(5);
      JTextField immuInfo = new JTextField(5);
      myPanel.setLayout(new GridLayout(0,2,2,2));
      myPanel.add(new JLabel("ID:"));
      myPanel.add(id);
      myPanel.add(new JLabel("Name:"));
      myPanel.add(name);
      myPanel.add(new JLabel("Parent Name:"));
      myPanel.add(pName);
      myPanel.add(new JLabel("Age:"));
      myPanel.add(age);
      myPanel.add(new JLabel("GPA:"));
      myPanel.add(gpa);
      myPanel.add(new JLabel("Regestration Time:"));
      myPanel.add(regTime);
      myPanel.add(new JLabel("Immunization Time:"));
      myPanel.add(immuInfo);
      
         int result = JOptionPane.showConfirmDialog(null, myPanel, 
               "Add Student", JOptionPane.OK_CANCEL_OPTION);
         if (result == JOptionPane.YES_OPTION) {
             String builder=id.getText()+","+name.getText()+ "," + pName.getText() + "," + age.getText()+ "," + gpa.getText() + "," + 
                     regTime.getText()+ "," + immuInfo.getText();
             conInstant.insertStudent(new Student(builder));
             updateStudentTable();
             updateStudentCountLabel();
             managmentText.append(builder + "added\n");
    }
    }
    
    
  
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox CourseBox1;
    private javax.swing.JComboBox GroupBox;
    private javax.swing.JButton ImportImmRules;
    private javax.swing.JButton addBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton immSearch;
    private javax.swing.JTable immTable;
    private javax.swing.JPanel immunizationTab;
    private javax.swing.JButton importRuleBtn;
    private javax.swing.JButton importStudentBtn;
    private javax.swing.JButton importTeacherBtn;
    private javax.swing.JTextField inputName;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JPanel managmentTab;
    private javax.swing.JTextArea managmentText;
    private javax.swing.JTextField nameEnquiry1;
    private javax.swing.JButton saveSchedule;
    private javax.swing.JButton saveStudent;
    private javax.swing.JPanel scheduleTab;
    private javax.swing.JTable scheduleTable;
    private javax.swing.JTextArea scheduleText;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchInput;
    private javax.swing.JButton showAll;
    private javax.swing.JLabel studentCountLabel;
    private javax.swing.JTable studentTable;
    private javax.swing.JLabel teacherCountLabel;
    private javax.swing.JTable teacherTable;
    private javax.swing.JLabel todayDate;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}


